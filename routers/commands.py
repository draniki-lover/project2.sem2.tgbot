from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram import types, Router

from keyboards import inlines
from states.state import Form

router = Router()

@router.message(CommandStart())
async def start(message: types.Message, state: FSMContext) -> None:
    await state.set_state(Form.waiting_communication_style)
    await message.answer(f"{message.chat.full_name}, –ø—Ä–∏–≤–µ—Çüëã!\n"
                         "–≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≥—Ä–∞–º–æ—Ç–Ω–æ —Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏üåù\n"
                         "–ù–∞–∂–º–∏ /help, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –±–ª–∏–∂–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞.\n"
                         "–ß—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è, let's try!!!",
                         reply_markup=inlines.start_kb())

@router.message(Command("help"))
async def help(message: types.Message):
    await message.answer(f"{message.chat.full_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –≤ —ç—Ç–æ–º –±–æ—Ç–µ:\n"
                         "- /about, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–æ–µ–∫—Ç–µ: —Å—É—Ç–∏, –µ–≥–æ –ø–æ–ª–µ–∑–Ω–æ—Å—Ç–∏‚úçÔ∏è,\n"
                         "- /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é —Å –±–æ—Ç–æ–º –∑–∞–Ω–æ–≤–æüôå,\n"
                         "- /history, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫–∏–µ –≥—Ä–∞—Ñ–∏–∫–∏ –±—ã–ª–∏ —É–∂–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω—ãüìê,\n"
                         "- /delete, —á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤."
                         )
